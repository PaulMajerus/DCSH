% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/queryConstructor.R
\name{queryBuildR}
\alias{queryBuildR}
\title{Générateur de requêtes SQL pour extractions DCSH}
\usage{
queryBuildR(var = character(), annee = character())
}
\arguments{
\item{var}{Character vector. Liste des noms de variables/taxonomies DCSH à extraire (ex: \code{c("DP", "DAS", "Age")})}

\item{annee}{Character vector. Liste des années concernées (ex: \code{c("2022", "2023")})}
}
\value{
Une liste de chaînes de caractères, chacune correspondant à une requête SQL prête à exécuter.
}
\description{
Cette fonction construit dynamiquement une ou plusieurs requêtes SQL selon des variables DCSH (taxonomie)
et les années concernées. Elle s’appuie sur la table interne \code{tableConstructionDB} pour identifier les bonnes
colonnes, versions, tables et jointures à inclure.
}
\details{
Les requêtes générées peuvent ensuite être exécutées via la fonction \code{\link{loadData}} du package \code{DCSH}.

La fonction :
\itemize{
\item Identifie les versions de codage pertinentes selon les années spécifiées.
\item Sélectionne les bonnes tables de base et d’attributs via \code{typeTable}.
\item Génère dynamiquement la clause \code{SELECT} incluant les bons alias.
\item Gère les jointures conditionnelles avec les tables secondaires.
\item Restreint le résultat à l'année d’intérêt via la clause \code{WHERE}.
}

Le champ \code{DocName} est systématiquement inclus dans les extractions.
}
\examples{
# Génère les requêtes pour extraire DP et DAS pour 2022 et 2023
req <- queryBuildR(var = c("DP", "DAS"), annee = c("2022", "2023"))
cat(req[[1]])
}
\seealso{
\code{\link{loadData}} pour exécuter les requêtes construites
}
